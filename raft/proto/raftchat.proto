syntax = "proto3";
package raftchat;

service RaftChat {
  rpc AppendEntries(AppendEntriesArgs) returns (AppendEntriesRes);
  rpc RequestVote(RequestVoteArgs) returns (RequestVoteRes);
  rpc RequestAppend(RequestAppendArgs) returns (RequestAppendRes);
}

message Command {
  uint64 client_id = 1;
  uint64 message_id = 2;
  bytes data = 3;
}

message Entry {
  uint64 term = 1;
  Command command = 2;
}

message AppendEntriesArgs {
  uint64 term = 1;
  // invariant : prev_length = 0 -> prev_term = 0
  uint64 prev_length = 2;
  uint64 prev_term = 3;
  repeated Entry entries = 4;
  uint64 committed_length = 5;
}

message AppendEntriesRes {
  uint64 term = 1;
  bool success = 2;
}

message RequestVoteArgs {
  uint64 term = 1;
  // invariant : prev_length = 0 -> prev_term = 0
  uint64 prev_length = 2;
  uint64 prev_term = 3;
}

message RequestVoteRes {
  uint64 term = 1;
  bool vote_granted = 2;
}

message RequestAppendArgs {
  Command command = 1;
}

message RequestAppendRes {
}
