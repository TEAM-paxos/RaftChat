name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_test:
    if: github.event_name == 'pull_request'
    runs-on: s2

    steps:
    - uses: actions/checkout@v4
    - name: Run tests
      run: nix develop --command bash -c "cargo build --verbose && cargo test --verbose && cargo fmt --all -- --check"

  build_image:
    if: github.event_name == 'push' 
    runs-on: s2
    steps:
      - name: Set up timestamp
        id: timestamp
        run: echo "TIMESTAMP=$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME}}/raftchat:${{ env.TIMESTAMP }}
            ${{ secrets.DOCKERHUB_USERNAME}}/raftchat:latest   
    
  run_server:
    if: github.event_name == 'push'
    strategy:
      matrix: 
        runner: [s1, s2, s3, s4]
    runs-on: ${{matrix.runner}}
    needs: build_image
    env: 
      SERVER_ADDRESS: ${{secrets.MONITOR_ADDR}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: run 
        run: mkdir logs && chmod 775 logs && chmod +x run_server.sh && ./run_server.sh
